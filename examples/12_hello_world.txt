
      ( *** LINOLEUM Example 12: Hello world! *** )

      ( TO COMPILE THIS PROGRAM - WINDOWS PACKAGE:
	--------------------------------------------------------------------
	1. MAKE SURE YOU HAVE INSTALLED THE LINOLEUM COMPILER,	BY LAUNCHING
	   THE REGISTRY FILE CALLED "Install.reg".
	2. CLICK THIS TEXT FILE'S ICON, "12_hello_world.TXT", WITH THE RIGHT
	   MOUSE BUTTON, SO THAT A POPUP MENU WILL SHOW.
	3. FROM  THE  POPUP  MENU,  SELECT  "COMPILE  AS  LINOLEUM  SOURCE":
	   THE COMPILER WILL START WORKING IN A DOS WINDOW.
	4. WHEN THE COMPILATION PROCESS IS FINISHED, CLOSE THE DOS WINDOW IF
	   NEEDED. YOU'LL NOTICE SOME NEW FILES ARE IN THE EXAMPLE's FOLDER.
	   TIPICALLY, THE NEW FILES ARE "PROGRAM" AND "SMBLSMAP".
	5. CLICK  ON  THE  "PROGRAM"  ICON  TO	RUN  THE  COMPILED  PROGRAM:
	   "PROGRAM" IS,  IN FACTS, THE RESULTING EXECUTABLE FILE.  TO	QUIT
	   ONE OF  THOSE EXAMPLES,  SOMETIMES YOU HAVE TO PRESS A KEY,	SOME
	   OTHER TIMES YOU HAVE  PRESS THE "ESC" KEY,  AND IN  CERTAIN OTHER
	   CASES, TO CLICK ONE OF THE MOUSE'S BUTTONS.
	6. YOU CAN RENAME  "PROGRAM" TO ANY OTHER NAME, IF YOU LIKE, AND YOU
	   CAN CHANGE THE PROGRAM'S  ICON USING THE "ICON EDITOR", PROVIDING
	   YOU WILL FIRST COPY "ICON EDITOR.EXE" INSIDE THIS FOLDER, BECAUSE
	   NO LINOLEUM APPLICATIONS CAN ACCESS FILES OUTSIDE THEIR FOLDER.
	--------------------------------------------------------------------
	ONCE  COMPILED,  YOU DON'T NEED  TO  RECOMPILE	THE EXAMPLE IN ORDER
	TO RUN IT AGAIN,  UNLESS YOU WANT TO MAKE SOME CHANGES TO ITS SOURCE
	CODE. LINOLEUM EXECUTABLES ARE STAND-ALONE, IE. THEY CAN BE EXECUTED
	WITHOUT THE LINOLEUM COMPILER PACKAGE. THEY ARE, IN FACTS, LOW-LEVEL
	ASSEMBLY PROGRAMS. EVERYTHING THEY NEED IS INCLUDED IN "PROGRAM.EXE" )

      ( DESCRIPTION OF THIS PROGRAM:
	Defines a subroutine to output some text,
	then writes short messages on the display.
	To quit, click the display in any points. )

( SOURCE CODE BEGINS HERE -------------------------------------------------- )

"directors"

	program name = { HELLO_WORLD! };
	unit = 32;

	display width = 152;
	display height = 76;

"constants"

	FONT HEADER = F0F0F0F0h;
	FIXED WIDTH FONT = 1;
	PROPORTIONAL FONT = 2;

	OFFSET FONT ALIGNMENT	= 1;
	OFFSET FONT BODY	= 2;
	OFFSET FONT WIDTH	= 3;
	OFFSET FONT TYPE	= 4;
	OFFSET FONT SHAPE	= 5;

	IVORY = F8E4C2h;
	PURE BLUE = 0000FFh;
	DARK GREEN = 008000h;

"variables"

vector
My font 		= FONT HEADER;
My font alignment	= 4;
My font body		= 16;
My font width		= 8;
My font type		= FIXED WIDTH FONT;

My font shape =

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000011110000b;0000001111000000b;0000000000000000b;
0000000000000000b;0000000011110000b;0000111100001111b;0011000000110000b;
0000000000000000b;0000000011110000b;0011110000111100b;0011000000110000b;
0000000000000000b;0000001111000000b;1111000011110000b;1111111111111100b;
0000000000000000b;0000001111000000b;0000001111000000b;0011000000110000b;
0000000000000000b;0000001111000000b;0000000000000000b;0011001100110000b;
0000000000000000b;0000111100000000b;0000000000000000b;0011001100110000b;
0000000000000000b;0000111100000000b;0000000000000000b;0011000000110000b;
0000000000000000b;0000111100000000b;0000000000000000b;1111111111111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0011000000110000b;
0000000000000000b;0011110000000000b;0000000000000000b;0011000000110000b;
0000000000000000b;0011110000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000001111000000b;0000000000000000b;0000111111110000b;0000000000000000b;
0000001111000000b;0000000000111100b;0000000000001100b;0000001111000000b;
0011111111110000b;1111000000111100b;0000111111111100b;0000001111000000b;
1111111111111100b;1111000011110000b;0011000000001100b;0000000011000000b;
1111000000000000b;0000000011110000b;0011111111111100b;0000000011000000b;
1111000000000000b;0000001111000000b;0000000000001100b;0000000000000000b;
1111111111110000b;0000001111000000b;0011110000001100b;0000000000000000b;
0011111111111100b;0000111100000000b;0011001100001100b;0000000000000000b;
0000000000111100b;0000111100000000b;0011000011001100b;0000000000000000b;
0000000000111100b;0011110000000000b;0011000000111100b;0000000000000000b;
1111111111111100b;0011110000111100b;0000000000001100b;0000000000000000b;
0011111111110000b;1111000000111100b;0000111111111100b;0000000000000000b;
0000001111000000b;1111000000000000b;0011000000001100b;0000000000000000b;
0000001111000000b;0000000000000000b;0011000000001100b;0000000000000000b;
0000000000000000b;0000000000000000b;0000111111110000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000011110000b;0000111100000000b;0000000000000000b;0000000000000000b;
0000000011110000b;0000111100000000b;0000001100000000b;0000000000000000b;
0000001111000000b;0000001111000000b;0000001100000000b;0000000000000000b;
0000001111000000b;0000001111000000b;1111111111111100b;0000001111000000b;
0000001111000000b;0000001111000000b;0000111111000000b;0000001111000000b;
0000111100000000b;0000000011110000b;0000110011000000b;0000001111000000b;
0000111100000000b;0000000011110000b;0011000000110000b;0011111111111100b;
0000111100000000b;0000000011110000b;0000000000000000b;0011111111111100b;
0000111100000000b;0000000011110000b;0000000000000000b;0000001111000000b;
0000111100000000b;0000000011110000b;0000000000000000b;0000001111000000b;
0000111100000000b;0000000011110000b;0000000000000000b;0000001111000000b;
0000001111000000b;0000001111000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111000000b;0000000000000000b;0000000000000000b;
0000000011110000b;0000111100000000b;0000000000000000b;0000000000000000b;
0000000011110000b;0000111100000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000011110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000011110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000001111000000b;
0000000000000000b;0011111111111100b;0000000000000000b;0000001111000000b;
0000000000000000b;0011111111111100b;0000000000000000b;0000111100000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111100000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0011110000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0011110000000000b;
0000001111000000b;0000000000000000b;0000001111000000b;1111000000000000b;
0000001111000000b;0000000000000000b;0000001111000000b;1111000000000000b;
0000000011000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000011000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0011111111110000b;0000000011000000b;0011111111110000b;0011111111110000b;
1111111111111100b;0000001111000000b;1111111111111100b;1111111111111100b;
1111000000111100b;0000111111000000b;1111000000111100b;1111000000111100b;
1111000000001100b;0000001111000000b;0000000000111100b;0000000000111100b;
1111000011001100b;0000001111000000b;0000000011110000b;0000000000111100b;
1100001111001100b;0000001111000000b;0000001111000000b;0000111111110000b;
1100111100001100b;0000001111000000b;0000111100000000b;0000111111110000b;
1100110000111100b;0000001111000000b;0011110000000000b;0000000000111100b;
1100000000111100b;0000001111000000b;1111000000000000b;0000000000111100b;
1111000000111100b;0000001111000000b;1111000000000000b;1111000000111100b;
1111111111111100b;0000001111000000b;1111111111111100b;1111111111111100b;
0011111111110000b;0000001111000000b;0011111111111100b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1100000000000000b;1111111111111100b;0011111111110000b;1111111111111100b;
1111000000000000b;1111111111111100b;1111111111111100b;1111111111111100b;
1111000000000000b;1111000000000000b;1111000000000000b;0000000000111100b;
1111000000000000b;1111000000000000b;1111000000000000b;0000000000111100b;
1111000000000000b;1111000000000000b;1111000000000000b;0000000000111100b;
1111000011000000b;1111111111110000b;1111111111110000b;0000001111111100b;
1111000011110000b;1111111111111100b;1111111111111100b;0000001111111100b;
1111000011110000b;0000000000111100b;1111000000111100b;0000000000111100b;
1111111111111100b;0000000000111100b;1111000000111100b;0000000000111100b;
0011111111111100b;1111000000111100b;1111000000111100b;0000000000111100b;
0000000011110000b;1111111111111100b;1111111111111100b;0000000000111100b;
0000000011110000b;0011111111110000b;0011111111110000b;0000000000111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0011111111110000b;0011111111110000b;0000000000000000b;0000000000000000b;
1111111111111100b;1111111111111100b;0000000000000000b;0000000000000000b;
1111000000111100b;1111000000111100b;0000000000000000b;0000000000000000b;
1111000000111100b;1111000000111100b;0000001111000000b;0000001111000000b;
1111000000111100b;1111000000111100b;0000001111000000b;0000001111000000b;
0011111111110000b;1111111111111100b;0000000000000000b;0000000000000000b;
1111111111111100b;0011111111111100b;0000000000000000b;0000000000000000b;
1111000000111100b;0000000000111100b;0000001111000000b;0000001111000000b;
1111000000111100b;0000000000111100b;0000001111000000b;0000001111000000b;
1111000000111100b;0000000000111100b;0000000000000000b;0000000011000000b;
1111111111111100b;0000000000111100b;0000000000000000b;0000000011000000b;
0011111111110000b;0000000000110000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;1111111111111100b;
0000000011110000b;0000000000000000b;0000111100000000b;1111000000111100b;
0000001111000000b;0000111111110000b;0000001111000000b;0000000000111100b;
0000111100000000b;0000111111110000b;0000000011110000b;0000000011111100b;
0011110000000000b;0000000000000000b;0000000000111100b;0000001111110000b;
0000111100000000b;0000000000000000b;0000000011110000b;0000001111000000b;
0000001111000000b;0000111111110000b;0000001111000000b;0000001111000000b;
0000000011110000b;0000111111110000b;0000111100000000b;0000000000000000b;
0000000000110000b;0000000000000000b;0000110000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000001111000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000001111000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000111111110000b;0011111111110000b;1111111111110000b;0011111111110000b;
0011110000111100b;1111111111111100b;1111111111111100b;1111111111111100b;
0011000000001100b;1111000000111100b;1111000000111100b;1111000000111100b;
1111000000001111b;1111000000111100b;1111000000111100b;1111000000000000b;
1100001111000011b;1111000000111100b;1111000000111100b;1111000000000000b;
1100110000110011b;1111111111111100b;1111111111110000b;1111000000000000b;
1100110000111111b;1111111111111100b;1111111111110000b;1111000000000000b;
1100001111001111b;1111000000111100b;1111000000111100b;1111000000000000b;
1111000000000000b;1111000000111100b;1111000000111100b;1111000000000000b;
0011000000000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0011110000000000b;1111000000111100b;1111111111111100b;1111111111111100b;
0000111111110000b;1111000000111100b;1111111111110000b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111111111110000b;1111111111111100b;1111111111111100b;0011111111110000b;
1111111111111100b;1111111111111100b;1111111111111100b;1111111111111100b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000000000b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000000000b;
1111000000111100b;1111111111110000b;1111111111110000b;1111000011110000b;
1111000000111100b;1111111111110000b;1111111111110000b;1111000011111100b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
1111111111111100b;1111111111111100b;1111000000000000b;1111111111111100b;
1111111111110000b;1111111111111100b;1111000000000000b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000000000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000000111100b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000011110000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111001111000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111111100000000b;
1111111111111100b;0000001111000000b;0000000000111100b;1111111100000000b;
1111111111111100b;0000001111000000b;0000000000111100b;1111001111000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111001111000000b;
1111000000111100b;0000001111000000b;1111000000111100b;1111000011110000b;
1111000000111100b;0000001111000000b;1111000000111100b;1111000011110000b;
1111000000111100b;0000001111000000b;1111111111111100b;1111000000111100b;
1111000000111100b;0000001111000000b;0011111111110000b;1111000000111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111000000000000b;1100000000001100b;1100000000111100b;0011111111110000b;
1111000000000000b;1111000000111100b;1111000000111100b;1111111111111100b;
1111000000000000b;1111110011111100b;1111110000111100b;1111000000111100b;
1111000000000000b;1111111111111100b;1111111100111100b;1111000000111100b;
1111000000000000b;1111111111111100b;1111111111111100b;1111000000111100b;
1111000000000000b;1111001100111100b;1111001111111100b;1111000000111100b;
1111000000000000b;1111000000111100b;1111000011111100b;1111000000111100b;
1111000000000000b;1111000000111100b;1111000000111100b;1111000000111100b;
1111000000000000b;1111000000111100b;1111000000111100b;1111000000111100b;
1111000000000000b;1111000000111100b;1111000000111100b;1111000000111100b;
1111111111111100b;1111000000111100b;1111000000111100b;1111111111111100b;
1111111111111100b;1111000000111100b;1111000000111100b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111111111110000b;0011111111110000b;1111111111110000b;0011111111110000b;
1111111111111100b;1111111111111100b;1111111111111100b;1111111111111100b;
1111000000111100b;1111000000111100b;1111000000111100b;1111000000111100b;
1111000000111100b;1111000000111100b;1111000000111100b;1111000000000000b;
1111000000111100b;1111000000111100b;1111000000111100b;1111000000000000b;
1111111111111100b;1111000000111100b;1111111111111100b;1111111111110000b;
1111111111110000b;1111000000111100b;1111111111110000b;0011111111111100b;
1111000000000000b;1111000000111100b;1111000011111100b;0000000000111100b;
1111000000000000b;1111000000111100b;1111000000111100b;0000000000111100b;
1111000000000000b;1111000000000000b;1111000000111100b;1111000000111100b;
1111000000000000b;1111111100111100b;1111000000111100b;1111111111111100b;
1111000000000000b;0011111100111100b;1111000000111100b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0011111111111100b;1111000000111100b;1100000000001100b;1100000000001100b;
0011111111111100b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111001100111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111111111111100b;
0000001111000000b;1111000000111100b;1111110011111100b;1111111111111100b;
0000001111000000b;1111000000111100b;0011111111110000b;1111110011111100b;
0000001111000000b;1111111111111100b;0000111111000000b;1111000000111100b;
0000001111000000b;0011111111110000b;0000001100000000b;1100000000001100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111000000111100b;1111000000111100b;1111111111111100b;0000111111110000b;
1111000000111100b;1111000000111100b;1111111111111100b;0000111111110000b;
0011110011110000b;1111000000111100b;0000000011110000b;0000111100000000b;
0011110011110000b;1111000000111100b;0000000011110000b;0000111100000000b;
0000001111000000b;1111000000111100b;0000001111000000b;0000111100000000b;
0000001111000000b;1111111111111100b;0000001111000000b;0000111100000000b;
0000111100000000b;0011111111111100b;0000111100000000b;0000111100000000b;
0000111100000000b;0000000000111100b;0000111100000000b;0000111100000000b;
0011110011110000b;0000000000111100b;0011110000000000b;0000111100000000b;
0011110011110000b;0000000000111100b;0011110000000000b;0000111100000000b;
1111000000111100b;1111111111111100b;1111111111111100b;0000111111110000b;
1111000000111100b;1111111111110000b;1111111111111100b;0000111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111000000000000b;0000111111110000b;0000001100000000b;0000000000000000b;
1111000000000000b;0000111111110000b;0000111111000000b;0000000000000000b;
0011110000000000b;0000000011110000b;0011111111110000b;0000000000000000b;
0011110000000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000111100000000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000111100000000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000000011110000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000000011110000b;0000000011110000b;0000001100000000b;0000000000000000b;
0000000000111100b;0000111111110000b;0000001100000000b;0000000000000000b;
0000000000111100b;0000111111110000b;0000001100000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0011111111111111b;
0000000000000000b;0000000000000000b;0000000000000000b;1111111111111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000110000000000b;0000000000000000b;1111000000000000b;0000000000000000b;
0000111100000000b;0000000000000000b;1111000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;1111000000000000b;0000000000000000b;
0000000011110000b;0000000000000000b;1111000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;1111000000000000b;0000000000000000b;
0000000000000000b;0011111111110000b;1111111111110000b;0011111111110000b;
0000000000000000b;1111111111111100b;1111111111111100b;1111111111111100b;
0000000000000000b;0000000000111100b;1111000000111100b;1111000000000000b;
0000000000000000b;1111000000111100b;1111000000111100b;1111000000000000b;
0000000000000000b;1111000000111100b;1111000000111100b;1111000000000000b;
0000000000000000b;1111111111111100b;1111111111111100b;1111111111111100b;
0000000000000000b;0011111111111100b;0011111111110000b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000111100b;0000000000000000b;0000000011111000b;0000000000000000b;
0000000000111100b;0000000000000000b;0000001111111000b;0000000000000000b;
0000000000111100b;0000000000000000b;0000001111000000b;0000000000000000b;
0000000000111100b;0000000000000000b;0000001111000000b;0000000000000000b;
0000000000111100b;0000000000000000b;0011111111111100b;0000000000000000b;
0011111111111100b;0011111111110000b;0011111111111100b;0011111111110000b;
1111111111111100b;1111111111111100b;0000001111000000b;1111111111111100b;
1111000000111100b;1111000000111100b;0000001111000000b;1111000000111100b;
1111000000111100b;1111000000111100b;0000001111000000b;1111000000111100b;
1111000000111100b;1111000000000000b;0000001111000000b;1111000000111100b;
1111111111111100b;1111111111111100b;0000001111000000b;1111111100111100b;
0011111111110000b;0011111111110000b;0000001111000000b;0011111100111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0011111111111100b;
0000000000000000b;0000000000000000b;0000000000000000b;0011111111110000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111000000000000b;0000000000000000b;0000000000000000b;1111000000000000b;
1111000000000000b;0000001111000000b;0000000000111100b;1111000000000000b;
1111000000000000b;0000001111000000b;0000000000111100b;1111000000001100b;
1111000000000000b;0000000000000000b;0000000000000000b;1111000000111100b;
1111000000000000b;0000000000000000b;0000000000000000b;1111000011110000b;
1111111111110000b;0000001111000000b;0000000000111100b;1111001111000000b;
1111111111111100b;0000001111000000b;0000000000111100b;1111111100000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111111100000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111001111000000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000011110000b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000000111100b;
1111000000111100b;0000001111000000b;0000000000111100b;1111000000001100b;
0000000000000000b;0000000000000000b;0000000000111100b;0000000000000000b;
0000000000000000b;0000000000000000b;0011111111111100b;0000000000000000b;
0000000000000000b;0000000000000000b;0011111111110000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0011110011110000b;0011111111110000b;0011111111110000b;
0000001111000000b;1111111111111100b;1111111111111100b;1111111111111100b;
0000001111000000b;1111111111111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111001100111100b;1111000000111100b;1111000000111100b;
0000001111000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000001111110000b;1111000000111100b;1111000000111100b;1111111111111100b;
0000000011110000b;1111000000111100b;1111000000111100b;0011111111110000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0011111111110000b;0011111111110000b;0011111111111100b;0011111111111100b;
1111111111111100b;1111111111111100b;1111111111111100b;1111111111111100b;
1111000000111100b;1111000000111100b;1111000000000000b;1111000000000000b;
1111000000111100b;1111000000111100b;1111000000000000b;1111000000111100b;
1111000000111100b;1111000000111100b;1111000000000000b;0000000000111100b;
1111111111111100b;1111111111111100b;1111000000000000b;1111111111111100b;
1111111111110000b;0011111111111100b;1111000000000000b;1111111111110000b;
1111000000000000b;0000000000111100b;0000000000000000b;0000000000000000b;
1111000000000000b;0000000000111100b;0000000000000000b;0000000000000000b;
1111000000000000b;0000000000111100b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000111100000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000111100000000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111111111110000b;0000000000000000b;0000000000000000b;0000000000000000b;
1111111111110000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000111100000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000111100000000b;1111000000111100b;1111000000111100b;1111000000111100b;
0000111100000000b;1111000000111100b;1111000000111100b;1111001100111100b;
0000111100000000b;1111000000111100b;1111000000111100b;1111111111111100b;
0000111100000000b;1111000000111100b;1111000000111100b;1111111111111100b;
0000111100000000b;1111000000111100b;0011110011110000b;1111110011111100b;
0000111111110000b;1111111111111100b;0000111111000000b;1111000000111100b;
0000001111110000b;0011111111111100b;0000001100000000b;1100000000001100b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

0000000000000000b;0000000000000000b;0000000000000000b;0000001111000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111111000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111100000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111100000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111100000000b;
0000000000000000b;0000000000000000b;0000000000000000b;0000111111000000b;
1111000000111100b;1111000000111100b;1111111111111100b;0000001111000000b;
0011110011110000b;1111000000111100b;1111111111110000b;0011111100000000b;
0000111111000000b;1111000000111100b;0000001111000000b;0011111100000000b;
0000001100000000b;1111000000111100b;0000111100000000b;0000001111000000b;
0000111111000000b;1111000000111100b;0011110000000000b;0000111111000000b;
0011110011110000b;1111111111111100b;1111111111111100b;0000111100000000b;
1111000000111100b;0011111111111100b;1111111111111100b;0000111100000000b;
0000000000000000b;0000000000111100b;0000000000000000b;0000111100000000b;
0000000000000000b;0011111111111100b;0000000000000000b;0000111111000000b;
0000000000000000b;0011111111110000b;0000000000000000b;0000001111000000b;

0000000000000000b;0000001111000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111110000b;0011110000111100b;0000000000000000b;
0000001111000000b;0000001111000000b;1111111100111100b;0000000000000000b;
0000001111000000b;0000000011111100b;1111001111111100b;0000000000000000b;
0000001111000000b;0000000011111100b;1111000011110000b;0000000000000000b;
0000001111000000b;0000001111000000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000000011110000b;0000000000000000b;0000000000000000b;
0000001111000000b;0000001111110000b;0000000000000000b;0000000000000000b;
0000000000000000b;0000001111000000b;0000000000000000b;0000000000000000b;

	BG color = IVORY;

	Write at X = 0;
	Write at Y = 0;
	Text color = 0;
	Write text = 0;
	Write with = 0;

	Current character X = 0;
	Current character Y = 0;

	Offset to current character in string = 0;

	Dot X = 0; Dot Y = 0; Stop X = 0; Stop Y = 0;
	Current shape unit = 0; Dot Mask = 0;

	Sample text = { HELLO_World!!! };
	Signature text = { by_LINOLEUM... };

"workspace"

	Primary Display = 11552; (152 x 76)

"programme"

	[Display Origin] = Primary Display;

	=> Clear the display with BG color;

	[Write at X] = 20;
	[Write at Y] = 20;
	[Text color] = DARK GREEN;
	[Write text] = Sample text;
	[Write with] = vector My font;
	=> Write TXT;

	[Write at X] = 20;
	[Write at Y] = 40;
	[Text color] = PURE BLUE;
	[Write text] = Signature text;
	[Write with] = vector My font;
	=> Write TXT;

	[Display Command] = RETRACE;
	isocall;

    "wait mouse click"
	? [Pointer Status] - PD LEFT BUTTON DOWN -> wait mouse click;
    "wait button release"
	? [Pointer Status] + PD LEFT BUTTON DOWN -> wait button release;

	end;			(of MAIN PROGRAM)

"Write TXT"
  ( Function to write a text string at given coordinates.
    [Write at X] = X coordinate of upper left corner of the text;
    [Write at Y] = Y coordinate of upper left corner of the text;
    [Text color] = color pattern for text string to be written;
    [Write text] = pointer to a null-terminated text string;
    [Write with] = pointer to a bit-mapped font. )
	D = [Write text];
	E = [Write with];
	? D = 0 -> Failure writing text;
	? [E] != FONT HEADER -> Failure writing text;
	[Current character X] = [Write at X];
	[Current character Y] = [Write at Y];
	[Offset to current character in string] = 0;
    "Loop for characters in string"
	A = [Offset to current character in string];
	A + [Write text];
	A = [A];
	? A = 0 -> End of text string;
	? A < 32 -> Next character;
	? A > 127 -> Next character;
	B = A; B - 32; B / [E plus OFFSET FONT ALIGNMENT];
	C = A; C - 32; C % [E plus OFFSET FONT ALIGNMENT];
	[Current shape unit] = B;
	[Current shape unit] * [E plus OFFSET FONT ALIGNMENT];
	[Current shape unit] * [E plus OFFSET FONT BODY];
	[Current shape unit] + C;
	[Current shape unit] + [Write with];
	[Current shape unit] + OFFSET FONT SHAPE;
	[Dot Y] = [Current character Y];
	[Stop Y] = [Current character Y];
	[Stop Y] + [E plus OFFSET FONT BODY];
    "Loop for scan lines in pointer shape"
	[Dot X] = [Current character X];
	[Stop X] = [Current character X];
	[Stop X] + [E plus OFFSET FONT WIDTH];
	[Dot Mask] = 80000000h;
	[Dot Mask] <@ [E plus OFFSET FONT WIDTH];
	[Dot Mask] <@ [E plus OFFSET FONT WIDTH];
    "Loop for pixels in pointer shape"
	D = [Current shape unit];
	? [D] - [Dot Mask] -> No dot in shape at this point;
	A = [Dot X];
	B = [Dot Y];
	C = [Text color];
	=> Plot;
    "No dot in shape at this point"
	[Dot Mask] @> 2;
	[Dot X]+;
	? [Dot X] < [Stop X] -> Loop for pixels in pointer shape;
	[Current shape unit] + [E plus OFFSET FONT ALIGNMENT];
	[Dot Y]+;
	? [Dot Y] < [Stop Y] -> Loop for scan lines in pointer shape;
	[Current character X] + [E plus OFFSET FONT WIDTH];
    "Next character"
	[Offset to current character in string]+;
	-> Loop for characters in string;
    "End of text string"
	end;
    "Failure writing text"
	fail;

"Plot"
    ( Draws a single dot.
      Coordinates are checked. All regs destroyed. )
    ( A = X coordinate; B = Y coordinate; C = DOT color. )
	? A '>= [Display Width] -> Plot Out of the screen;
	? B '>= [Display Height] -> Plot Out of the screen;
	B * [Display Width]; B + A;
	B + [Display Origin];
	[B] = C;
	end;
    "Plot Out of the screen"
	fail;

"Clear the display with BG color"
	A = [Display Width];
	A * [Display Height];
	B = [Display Origin];
	C = [BG color];
    "Loop to clear all of it"
	[B] = C; B+;
	A ^ Loop to clear all of it;
	end;

(Um... nothing really new there. I didn't present other peripherals' control.
Just made a function to write a text using a bit-mapped font. You can take it
as an example of "how to organize a font", which is seen as a structure formed
by a normal header, and informations about characters' size. "alignment" means
the chars are displaced in memory as in groups of x shapes per row, where x is
called the alignment. It's just because it's less encumbering to define a font
by binary values this way. The "write" function, in few words, is simplified,
and has these limits: chars width cant exceed 16, height can be any value, but
not below one, proportional fonts are not considered; finally there are only
95 charachers per font, going from ASCII codes 32 (blank space) to 127 (del).)

(A particular thing in the bit-maps forming the characters:
to facilitate editing the font shapes directly from the source, each bit is
duplicated, so that an 8-bit wide font takes in reality 16 bits. This makes
the aspect of the shapes more similar to how they appear on the screen. You
may notice, in effects, that the lines:

	[Dot Mask] = 80000000h;
	[Dot Mask] <@ [E plus OFFSET FONT WIDTH];
	[Dot Mask] <@ [E plus OFFSET FONT WIDTH];
	(...)
	[Dot Mask] @> 2;

are slightly different from the previous example tracing the shape of the
arrow pointer, where they rotated the bitmask by one bit per pixel. It's not
needed, but makes things easier to see in the source text. At one bit per
pixel, characters D to G in uppercase would appear as:

		00000000b;00000000b;00000000b;00000000b;
		11111100b;11111110b;11111110b;01111100b;
		11111110b;11111110b;11111110b;11111110b;
		11000110b;11000000b;11000000b;11000110b;
		11000110b;11000000b;11000000b;11000000b;
		11000110b;11000000b;11000000b;11000000b;
		11000110b;11111110b;11111110b;11001100b;
		11000110b;11111110b;11111110b;11001110b;
		11000110b;11000000b;11000000b;11000110b;
		11000110b;11000000b;11000000b;11000110b;
		11000110b;11000000b;11000000b;11000110b;
		11111110b;11111110b;11000000b;11111110b;
		11111100b;11111110b;11000000b;01111100b;
		00000000b;00000000b;00000000b;00000000b;
		00000000b;00000000b;00000000b;00000000b;
		00000000b;00000000b;00000000b;00000000b;

which is more difficult to see because characters like 0 and 1 are usually
NOT perfectly square, but twice the size in height than in width. So, if you
repeat each bit, you'll see:

   0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
   1111111111110000b;1111111111111100b;1111111111111100b;0011111111110000b;
   1111111111111100b;1111111111111100b;1111111111111100b;1111111111111100b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000000000b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000000000b;
   1111000000111100b;1111111111110000b;1111111111110000b;1111000011110000b;
   1111000000111100b;1111111111110000b;1111111111110000b;1111000011111100b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
   1111000000111100b;1111000000000000b;1111000000000000b;1111000000111100b;
   1111111111111100b;1111111111111100b;1111000000000000b;1111111111111100b;
   1111111111110000b;1111111111111100b;1111000000000000b;0011111111110000b;
   0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
   0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;
   0000000000000000b;0000000000000000b;0000000000000000b;0000000000000000b;

and it should be much more easier to "read" the binary shape.)

(I made this example, first because it's very classic. It's a "hello world".
Second, as an introduction to the next one. Come and meet keyboard control.)
